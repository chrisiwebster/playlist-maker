{"version":3,"sources":["components/Header/index.jsx","components/NavBar/index.jsx","pages/Home/index.jsx","components/Button/index.jsx","pages/PlaylistView/index.jsx","components/Track/index.jsx","components/TrackList/index.jsx","components/SearchResults/index.jsx","components/Input/index.jsx","components/Search/index.jsx","components/Playlist/index.jsx","pages/SearchWrapper/index.jsx","App/App.js","index.js"],"names":["Header","title","children","NavBar","handleNavClick","status","className","tabIndex","onKeyDown","onClick","role","to","exact","Home","Button","type","name","id","PlaylistView","accessToken","expiresIn","playlists","viewPlaylists","handleSignIn","checkAccessToken","useEffect","document","map","playlist","Track","track","remove","addTrack","removeTrack","artist","album","TrackList","tracks","SearchResults","searchTracks","message","Input","label","placeholder","onChange","onBlur","value","htmlFor","Search","handleAPISearch","searchInput","handleSearchInput","handleClearSearchInput","then","SearchWrapper","undefined","onSubmit","e","Playlist","updatePlaylistName","playlistTracks","savePlaylist","playlistName","setPlaylistTracks","setPlaylistName","handleClearNameInput","playlistInput","preventDefault","trackURIs","uri","handleSavePlaylist","scope","length","AppRouter","withRouter","useState","setStatus","setRedirect","setExpiresIn","setAccessToken","searchTerm","setSearchTerm","setSearchTracks","setSearchInput","setPlaylistInput","setPlaylists","a","window","location","href","match","accessTokenMatch","expiresInMatch","Number","setInterval","prevState","redirect","Promise","process","path","fetch","headers","Authorization","response","json","jsonResponse","console","log","items","artists","target","filter","currentTrack","trackUris","userId","method","body","JSON","stringify","playlistId","uris","find","savedTrack","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.1926e30e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = ({ title, children }) => {\n  return (\n    <header>\n      {children}\n      <h1>{title}</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./styles.css\";\n\nconst NavBar = ({ handleNavClick, status }) => {\n  return (\n    <div className=\"nav-wrapper\">\n      <i\n        tabIndex=\"0\"\n        onKeyDown={() => handleNavClick()}\n        onClick={() => handleNavClick()}\n        className={status === true ? \"fas fa-times\" : \"fas fa-hamburger\"}\n      ></i>\n      <nav>\n        <ul\n          className={status ? \"navigation active\" : \"navigation\"}\n          role=\"navigation\"\n        >\n          <li onClick={() => handleNavClick()}>\n            <NavLink to=\"/\" exact className=\"nav-item\">\n              Home\n            </NavLink>\n          </li>\n          <li onClick={() => handleNavClick()}>\n            <NavLink to=\"/search\" exact className=\"nav-item\">\n              Search songs\n            </NavLink>\n          </li>\n          <li onClick={() => handleNavClick()}>\n            <NavLink to=\"/view-playlists\" exact className=\"nav-item\">\n              View playlists\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <h2>I am home</h2>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Button = ({ type, name, onClick, className, id }) => {\n  return (\n    <button\n      id={id}\n      type={type || \"button\"}\n      className={className}\n      onClick={onClick}\n    >\n      {name}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useEffect } from \"react\";\n\n//Components\nimport Button from \"../../components/Button\";\n\nconst PlaylistView = ({\n  className,\n  accessToken,\n  expiresIn,\n  playlists,\n  viewPlaylists,\n  handleSignIn,\n  checkAccessToken,\n}) => {\n  useEffect(() => {\n    document.title = \"View playlists | Chrisi Webster\";\n    checkAccessToken();\n    viewPlaylists();\n  }, []);\n\n  return (\n    <div className={className}>\n      <h2>View your playlists</h2>\n      {accessToken === \"\" && (\n        <Button\n          type=\"button\"\n          name=\"Sign in\"\n          id=\"sign\"\n          onClick={() => handleSignIn()}\n        />\n      )}\n      {expiresIn !== \"\" && (\n        <div>\n          <ul>\n            {playlists.map((playlist) => {\n              return <div key={playlist.id}>{playlist.name}</div>;\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PlaylistView;\n","import React from \"react\";\n\n//Components\nimport Button from \"../Button\";\n\n//CSS\nimport \"./styles.css\";\n\nconst Track = ({ track, remove, addTrack, removeTrack }) => {\n  const renderButton = () => {\n    if (remove) {\n      return (\n        <Button type=\"submit\" name=\"-\" onClick={() => removeTrack(track)} />\n      );\n    } else {\n      return <Button type=\"submit\" name=\"+\" onClick={() => addTrack(track)} />;\n    }\n  };\n  return (\n    <div className=\"tracks\">\n      <div className=\"flex-wrapper\">\n        <h3>{track.name}</h3> {renderButton()}\n      </div>\n      <p>\n        {track.artist} | {track.album}\n      </p>\n    </div>\n  );\n};\n\nexport default Track;\n","import React from \"react\";\n\n//Components\nimport Track from \"../Track\";\n\nconst TrackList = ({ tracks, addTrack, removeTrack, remove }) => {\n  return (\n    <div className=\"track-list\">\n      {tracks.map((track) => {\n        return (\n          <Track\n            track={track}\n            key={track.id}\n            addTrack={addTrack}\n            removeTrack={removeTrack}\n            remove={remove}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TrackList;\n","import React from \"react\";\n\n//Components\nimport TrackList from \"../TrackList\";\n\nconst SearchResults = ({ searchTracks, addTrack, message }) => {\n  return (\n    <div className=\"flex-wrapper\">\n      <div className=\"tracks-wrapper\">\n        {searchTracks === [] && { message }}\n        <TrackList tracks={searchTracks} addTrack={addTrack} remove={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import React from \"react\";\n\nconst Input = ({ type, label, placeholder, onChange, onBlur, id, value }) => {\n  return (\n    <div>\n      <label htmlFor={id}>{label}</label>\n      <input\n        id={id}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\nimport SearchWrapper from \"../../pages/SearchWrapper\";\n\n//Components\nimport Button from \"../Button\";\nimport Input from \"../Input\";\n\n//CSS\nimport \"./styles.css\";\n\nconst Search = ({\n  handleAPISearch,\n  accessToken,\n  expiresIn,\n  handleSignIn,\n  searchInput,\n  handleSearchInput,\n  handleClearSearchInput,\n  checkAccessToken,\n}) => {\n  useEffect(() => {\n    checkAccessToken();\n  }, []);\n  return (\n    <div className=\"search-buttons\">\n      {!accessToken && (\n        <Button\n          type=\"button\"\n          name=\"Sign in\"\n          id=\"sign\"\n          onClick={() => {\n            handleSignIn(\n              \"https://chrisiwebster.github.io/playlist-maker/search\"\n            ).then(<Redirect to={SearchWrapper} />);\n          }}\n        />\n      )}\n      {expiresIn !== undefined && (\n        <form id=\"search\" onSubmit={(e) => handleAPISearch(e)}>\n          <Input\n            type=\"text\"\n            value={searchInput}\n            id=\"search\"\n            placeholder=\"Search for songs\"\n            onChange={(e) => handleSearchInput(e)}\n            onBlur={() => handleClearSearchInput()}\n          />\n          <Button type=\"submit\" name=\"Search\" />\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\n//Components\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport TrackList from \"../TrackList\";\n\nconst Playlist = ({\n  updatePlaylistName,\n  playlistTracks,\n  savePlaylist,\n  removeTrack,\n  playlistName,\n  setPlaylistTracks,\n  setPlaylistName,\n  handleClearNameInput,\n  playlistInput,\n}) => {\n  //Creating a separate function so I can handle changing the state\n  const handleSavePlaylist = (e) => {\n    e.preventDefault();\n    const trackURIs = playlistTracks.map((track) => track.uri);\n    savePlaylist(playlistName, trackURIs);\n    setPlaylistName(\"New Playlist\");\n    setPlaylistTracks([]);\n    handleClearNameInput();\n  };\n\n  return (\n    <form id=\"playlist-form\" onSubmit={(e) => handleSavePlaylist(e)}>\n      <Input\n        type=\"text\"\n        id=\"playlist\"\n        value={playlistInput}\n        onChange={(e) => updatePlaylistName(e)}\n      />\n\n      <TrackList\n        tracks={playlistTracks}\n        removeTrack={removeTrack}\n        remove={true}\n      />\n\n      <Button type=\"submit\" name=\"Save to Spotify\" id=\"save-spotify\" />\n    </form>\n  );\n};\n\nexport default Playlist;\n","import React, { useEffect } from \"react\";\n\n//CSS\nimport \"./styles.css\";\n\n//Components\nimport SearchResults from \"../../components/SearchResults\";\nimport Search from \"../../components/Search\";\nimport Playlist from \"../../components/Playlist\";\n\n//SearchWrapper\nconst SearchWrapper = ({\n  expiresIn,\n  accessToken,\n  handleAPISearch,\n  handleSignIn,\n  searchInput,\n  addTrack,\n  handleSearchInput,\n  handleClearSearchInput,\n  searchTracks,\n  updatePlaylistName,\n  removeTrack,\n  savePlaylist,\n  setPlaylistName,\n  playlistTracks,\n  playlistName,\n  playlistInput,\n  setPlaylistTracks,\n  handleClearNameInput,\n  checkAccessToken,\n  scope,\n  id,\n}) => {\n  //When mounting\n  useEffect(() => {\n    document.title = \"Search | Chrisi Webster\";\n  });\n\n  return (\n    <div>\n      <Search\n        handleAPISearch={handleAPISearch}\n        accessToken={accessToken}\n        expiresIn={expiresIn}\n        handleSearchInput={handleSearchInput}\n        handleClearSearchInput={handleClearSearchInput}\n        searchInput={searchInput}\n        handleSignIn={handleSignIn}\n        checkAccessToken={checkAccessToken}\n        scope={scope}\n        id={id}\n      />\n\n      {expiresIn !== 0 && (\n        <div className=\"search-playlist-wrapper\">\n          <div className=\"search-results-wrapper\">\n            <h2>Search results ({searchTracks.length})</h2>\n            <SearchResults searchTracks={searchTracks} addTrack={addTrack} />\n          </div>\n          {searchTracks && (\n            <div className=\"playlist-wrapper\">\n              <h2>Add to playlist</h2>\n              <Playlist\n                updatePlaylistName={updatePlaylistName}\n                removeTrack={removeTrack}\n                savePlaylist={savePlaylist}\n                setPlaylistName={setPlaylistName}\n                playlistTracks={playlistTracks}\n                searchTracks={searchTracks}\n                playlistName={playlistName}\n                playlistInput={playlistInput}\n                setPlaylistTracks={setPlaylistTracks}\n                handleClearNameInput={handleClearNameInput}\n              />\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchWrapper;\n","import React, { useState } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\n\n//Components\nimport Header from \"../components/Header\";\nimport NavBar from \"../components/NavBar\";\nimport Home from \"../pages/Home\";\nimport PlaylistView from \"../pages/PlaylistView\";\nimport SearchWrapper from \"../pages/SearchWrapper\";\n\n//CSS\nimport \"./App.css\";\n\n//Variables\nconst id = process.env.REACT_APP_SPOTIFY_KEY;\nconst scope =\n  \"playlist-read-private playlist-read-collaborative playlist-modify-public\";\n\n//App component\nconst App = () => {\n  //State\n  const [status, setStatus] = useState(false);\n  const [redirect, setRedirect] = useState(null);\n  const [expiresIn, setExpiresIn] = useState();\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState();\n  const [searchTracks, setSearchTracks] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"\");\n  const [playlistInput, setPlaylistInput] = useState(\"New Playlist\");\n  const [playlists, setPlaylists] = useState([]);\n\n  const checkAccessToken = async () => {\n    //Check access token in URL\n    const accessTokenMatch = await window.location.href.match(\n      /access_token=([^&]*)/\n    );\n    const expiresInMatch = await window.location.href.match(\n      /expires_in=([^&]*)/\n    );\n    //if they're there grabs the right stuff\n    if (accessTokenMatch && expiresInMatch) {\n      setAccessToken(accessTokenMatch[1]);\n      setExpiresIn(Number(expiresInMatch[1]));\n      //every second, removes a value from token, if expiresIn is 0, there is no accessToken.\n      setInterval(() => {\n        setExpiresIn((prevState) => {\n          return prevState - 1;\n        });\n\n        if (expiresIn === 0) {\n          setExpiresIn(\"\");\n        }\n      }, 1000);\n    }\n  };\n\n  //NavBar open and close\n  const handleNavClick = () => {\n    status === true ? setStatus(false) : setStatus(true);\n  };\n\n  //Sign into Spotify\n  const handleSignIn = (redirect) => {\n    setRedirect(redirect);\n    return Promise(\n      (window.location = `https://accounts.spotify.com/authorize?client_id=${id}&response_type=token&scope=${scope}&redirect_uri=${redirect}`)\n    );\n  };\n\n  //Search for tracks\n  const handleSearchInput = (e) => {\n    setSearchInput(e.target.value);\n    setSearchTerm(searchInput);\n  };\n\n  const handleClearSearchInput = () => {\n    setSearchInput(\"\");\n  };\n\n  const handleAPISearch = (e) => {\n    e.preventDefault();\n    fetch(\n      `https://api.spotify.com/v1/search?type=track&q=${searchTerm}&limit=50`,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      }\n    )\n      .then((response) => {\n        return response.json();\n      })\n      .then((jsonResponse) => {\n        if (!jsonResponse.tracks) {\n          //if there are no tracks in the response\n          return [];\n        }\n        console.log(jsonResponse);\n        return jsonResponse.tracks.items.map((track) => ({\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri,\n        }));\n      })\n      .then((jsonResponse) => {\n        setSearchTracks(jsonResponse);\n      });\n  };\n\n  //Playlist add functions\n  const addTrack = (track) => {\n    //seeing if the track is already in the playlist\n    if (\n      playlistTracks.find((savedTrack) => savedTrack.id === playlistTracks.id)\n    ) {\n      return;\n    }\n    setPlaylistTracks((prevState) => {\n      return [...prevState, track];\n    });\n  };\n\n  const removeTrack = (track) => {\n    let tracks = playlistTracks.filter(\n      (currentTrack) => currentTrack.id !== track.id\n    );\n    setPlaylistTracks(tracks);\n  };\n\n  const updatePlaylistName = (e) => {\n    setPlaylistInput(e.target.value);\n    setPlaylistName(playlistInput);\n  };\n\n  const handleClearNameInput = () => {\n    setPlaylistInput(\"New Playlist\");\n  };\n\n  const savePlaylist = (name, trackUris) => {\n    if (!name || !trackUris.length) {\n      return;\n    }\n\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    return fetch(\"https://api.spotify.com/v1/me\", {\n      headers: headers,\n    })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        const userId = jsonResponse.id;\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n          headers: headers,\n          method: \"POST\",\n          body: JSON.stringify({ name: name }),\n        })\n          .then((response) => response.json())\n          .then((jsonResponse) => {\n            console.log(jsonResponse);\n            const playlistId = jsonResponse.id;\n            return fetch(\n              `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\n              {\n                headers: headers,\n                method: \"POST\",\n                body: JSON.stringify({ uris: trackUris }),\n              }\n            );\n          });\n      });\n  };\n\n  //View playlist functions\n  const viewPlaylists = () => {\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    return fetch(\"https://api.spotify.com/v1/me\", {\n      headers: headers,\n    })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        const userId = jsonResponse.id;\n        return fetch(\n          `https://api.spotify.com/v1/users/${userId}/playlists?limit=50`,\n          {\n            headers: headers,\n            method: \"GET\",\n          }\n        )\n          .then((response) => response.json())\n          .then((jsonResponse) => {\n            if (jsonResponse.items) {\n              console.log(jsonResponse.items);\n              return jsonResponse.items.map((playlist) => ({\n                id: playlist.id,\n                name: playlist.name,\n              }));\n            } else {\n              return [];\n            }\n          })\n          .then((jsonResponse) => {\n            setPlaylists(jsonResponse);\n          });\n      });\n  };\n  return (\n    <div>\n      <Header title=\"Playlist Maker\">\n        <NavBar handleNavClick={handleNavClick} status={status} />\n      </Header>\n      <Switch>\n        <Route to=\"/\" exact>\n          <Home />\n        </Route>\n        <Route path={\"/search\"} exact>\n          <SearchWrapper\n            checkAccessToken={checkAccessToken}\n            handleAPISearch={handleAPISearch}\n            accessToken={accessToken}\n            expiresIn={expiresIn}\n            handleSignIn={handleSignIn}\n            searchInput={searchInput}\n            handleSearchInput={handleSearchInput}\n            handleClearSearchInput={handleClearSearchInput}\n            updatePlaylistName={updatePlaylistName}\n            removeTrack={removeTrack}\n            savePlaylist={savePlaylist}\n            setPlaylistName={setPlaylistName}\n            playlistTracks={playlistTracks}\n            searchTracks={searchTracks}\n            playlistName={playlistName}\n            playlistInput={playlistInput}\n            addTrack={addTrack}\n            setPlaylistTracks={setPlaylistTracks}\n            handleClearNameInput={handleClearNameInput}\n          />\n        </Route>\n        <Route path=\"/view-playlists\" exact>\n          <PlaylistView\n            checkAccessToken={checkAccessToken}\n            accessToken={accessToken}\n            expiresIn={expiresIn}\n            viewPlaylists={viewPlaylists}\n            setPlaylists={setPlaylists}\n            playlists={playlists}\n            handleSignIn={handleSignIn}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nconst AppRouter = withRouter(App);\n\nexport default AppRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AppRouter from \"./App/App\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={\"/\"}>\n      <AppRouter />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}