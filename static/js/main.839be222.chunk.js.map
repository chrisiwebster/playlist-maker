{"version":3,"sources":["components/SearchWrapper/index.jsx","components/Header/index.jsx","components/NavBar/index.jsx","components/Home/index.jsx","components/Button/index.jsx","components/PlaylistView/index.jsx","components/Track/index.jsx","components/TrackList/index.jsx","components/SearchResults/index.jsx","components/Input/index.jsx","components/Search/index.jsx","components/Playlist/index.jsx","components/App/App.js","index.js"],"names":["accessToken","Header","title","children","NavBar","handleNavClick","status","className","tabIndex","onKeyDown","onClick","role","to","Home","Button","type","name","id","PlaylistView","expiresIn","useState","setPlaylists","useEffect","document","headers","Authorization","fetch","then","response","json","jsonResponse","userId","method","console","log","viewPlaylists","Track","track","remove","addTrack","removeTrack","artist","album","TrackList","tracks","map","SearchResults","searchTracks","message","Input","label","placeholder","onChange","onBlur","value","htmlFor","Search","handleAPISearch","handleSignIn","searchInput","handleSearchInput","handleClearSearchInput","onSubmit","e","Playlist","updatePlaylistName","playlistTracks","savePlaylist","playlistName","setPlaylistTracks","setPlaylistName","handleClearNameInput","playlistInput","preventDefault","trackURIs","uri","handleSavePlaylist","accessTokenMatch","window","location","href","match","expiresInMatch","Number","setInterval","reload","SearchWrapper","searchTerm","setSearchTerm","setSearchTracks","setSearchInput","setPlaylistInput","items","artists","target","process","class","length","find","savedTrack","prevState","filter","currentTrack","trackUris","body","JSON","stringify","playlistId","uris","App","setStatus","basename","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.839be222.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n//CSS\nimport \"./styles.css\";\n\n//Components\nimport SearchResults from \"../SearchResults\";\nimport Search from \"../Search\";\nimport Playlist from \"../Playlist\";\nimport PlaylistView from \"../PlaylistView\";\n\n//Variables\nconst id = process.env.REACT_APP_SPOTIFY_KEY;\nconst redirect = `http://localhost:3000/`;\nlet accessToken;\nlet expiresIn = 0;\n\n//Access token check\nconst accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\nconst expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n//if they're there grabs the right stuff\nif (accessTokenMatch && expiresInMatch) {\n  accessToken = accessTokenMatch[1];\n  expiresIn = Number(expiresInMatch[1]);\n  //redirects to the search page (wasn't loading)\n  window.location.href =\n    \"https://chrisiwebster.github.com/edit-playlist/#/search\";\n  //every second, removes a value from token, if expiresIn is 0, there is no accessToken.\n  setInterval(() => {\n    expiresIn--;\n    if (expiresIn === 0) {\n      accessToken = \"\";\n      document.location.reload();\n    }\n  }, 1000);\n}\n\n//SearchWrapper\nconst SearchWrapper = () => {\n  const [searchTerm, setSearchTerm] = useState();\n  const [searchTracks, setSearchTracks] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"New Playlist\");\n  const [playlistInput, setPlaylistInput] = useState(\"New Playlist\");\n\n  //Sign into Spotify\n  const handleSignIn = () => {\n    window.location = `https://accounts.spotify.com/authorize?client_id=${id}&response_type=token&scope=playlist-modify-public%20playlist-read-private%20playlist-read-collaborative&redirect_uri=${redirect}`;\n  };\n\n  //Search for tracks\n  const handleSearchInput = (e) => {\n    setSearchInput(e.target.value);\n    setSearchTerm(searchInput);\n  };\n\n  const handleClearSearchInput = () => {\n    setSearchInput(\"\");\n  };\n\n  const handleAPISearch = (e) => {\n    e.preventDefault();\n    fetch(`https://api.spotify.com/v1/search?type=track&q=${searchTerm}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((jsonResponse) => {\n        if (!jsonResponse.tracks) {\n          //if there are no tracks in the response\n          return [];\n        }\n        console.log(jsonResponse);\n        return jsonResponse.tracks.items.map((track) => ({\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri,\n        }));\n      })\n      .then((jsonResponse) => {\n        setSearchTracks(jsonResponse);\n      });\n  };\n\n  //Playlist add functions\n  const addTrack = (track) => {\n    //seeing if the track is already in the playlist\n    if (\n      playlistTracks.find((savedTrack) => savedTrack.id === playlistTracks.id)\n    ) {\n      return;\n    }\n    setPlaylistTracks((prevState) => {\n      return [...prevState, track];\n    });\n  };\n\n  const removeTrack = (track) => {\n    let tracks = playlistTracks.filter(\n      (currentTrack) => currentTrack.id !== track.id\n    );\n    setPlaylistTracks(tracks);\n  };\n\n  const updatePlaylistName = (e) => {\n    setPlaylistInput(e.target.value);\n    setPlaylistName(playlistInput);\n  };\n\n  const handleClearNameInput = () => {\n    setPlaylistInput(\"New Playlist\");\n  };\n\n  const savePlaylist = (name, trackUris) => {\n    if (!name || !trackUris.length) {\n      return;\n    }\n\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    return fetch(\"https://api.spotify.com/v1/me\", {\n      headers: headers,\n    })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        const userId = jsonResponse.id;\n        return fetch(\n          `https://api.spotify.com/v1/users/${userId}/playlists?limit=50`,\n          {\n            headers: headers,\n            method: \"POST\",\n            body: JSON.stringify({ name: name }),\n          }\n        )\n          .then((response) => response.json())\n          .then((jsonResponse) => {\n            console.log(jsonResponse);\n            const playlistId = jsonResponse.id;\n            return fetch(\n              `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\n              {\n                headers: headers,\n                method: \"POST\",\n                body: JSON.stringify({ uris: trackUris }),\n              }\n            );\n          });\n      });\n  };\n  //When mounting\n  useEffect(() => {});\n  return (\n    <div>\n      <Search\n        handleAPISearch={handleAPISearch}\n        accessToken={accessToken}\n        expiresIn={expiresIn}\n        handleSearchInput={handleSearchInput}\n        handleClearSearchInput={handleClearSearchInput}\n        searchInput={searchInput}\n        handleSignIn={handleSignIn}\n      />\n\n      {expiresIn !== 0 && (\n        <div className=\"search-playlist-wrapper\">\n          <div class=\"search-results-wrapper\">\n            <h2>Search results ({searchTracks.length})</h2>\n            <SearchResults searchTracks={searchTracks} addTrack={addTrack} />\n          </div>\n          {searchTracks && (\n            <div className=\"playlist-wrapper\">\n              <h2>Add to playlist</h2>\n              <Playlist\n                updatePlaylistName={updatePlaylistName}\n                removeTrack={removeTrack}\n                savePlaylist={savePlaylist}\n                setPlaylistName={setPlaylistName}\n                playlistTracks={playlistTracks}\n                searchTracks={searchTracks}\n                playlistName={playlistName}\n                playlistInput={playlistInput}\n                setPlaylistTracks={setPlaylistTracks}\n                handleClearNameInput={handleClearNameInput}\n              />\n            </div>\n          )}\n        </div>\n      )}\n\n      <PlaylistView\n        className=\"hidden\"\n        expiresIn={expiresIn}\n        accessToken={accessToken}\n      />\n    </div>\n  );\n};\n\nexport default SearchWrapper;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Header = ({ title, children }) => {\n  return (\n    <header>\n      {children}\n      <h1>{title}</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link, HashRouter } from \"react-router-dom\";\nimport \"./styles.css\";\n\nconst NavBar = ({ handleNavClick, status }) => {\n  return (\n    <div className=\"nav-wrapper\">\n      <i\n        tabIndex=\"0\"\n        onKeyDown={() => handleNavClick()}\n        onClick={() => handleNavClick()}\n        className={status === true ? \"fas fa-times\" : \"fas fa-hamburger\"}\n      ></i>\n      <nav>\n        <HashRouter>\n          <ul\n            className={status ? \"navigation active\" : \"navigation\"}\n            role=\"navigation\"\n          >\n            <li onClick={() => handleNavClick()}>\n              <Link to=\"/\" className=\"nav-item\">\n                Home\n              </Link>\n            </li>\n            <li onClick={() => handleNavClick()}>\n              <Link to=\"/search\" className=\"nav-item\">\n                Search songs\n              </Link>\n            </li>\n            <li onClick={() => handleNavClick()}>\n              <Link to=\"/view-playlists\" className=\"nav-item\">\n                View playlists\n              </Link>\n            </li>\n          </ul>\n        </HashRouter>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <h2>I am home</h2>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Button = ({ type, name, onClick, className, id }) => {\n  return (\n    <button\n      id={id}\n      type={type || \"button\"}\n      className={className}\n      onClick={onClick}\n    >\n      {name}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\n\n//Components\nimport Button from \"../Button\";\n\nconst PlaylistView = ({ className, accessToken, expiresIn }) => {\n  const [playlists, setPlaylists] = useState([]);\n\n  //View playlist functions\n  const viewPlaylists = () => {\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    return fetch(\"https://api.spotify.com/v1/me\", {\n      headers: headers,\n    })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        const userId = jsonResponse.id;\n        return (\n          fetch(\n            `https://api.spotify.com/v1/users/${userId}/playlists?limit=50`,\n            {\n              headers: headers,\n              method: \"GET\",\n            }\n          )\n            .then((response) => response.json())\n            // .then((jsonResponse) => {\n            //   return jsonResponse.items[0]\n            //     .map((item) => ({\n            //       link: item.href,\n            //       id: item.id,\n            //       images: item.images,\n            //       name: item.name,\n            //       tracks: item.tracks.total,\n            //       uri: item.uri,\n            //     }))\n            .then((jsonResponse) => {\n              console.log(jsonResponse);\n              setPlaylists(jsonResponse);\n            })\n        );\n      });\n    // });\n  };\n\n  useEffect(() => {\n    document.title = \"View playlists | Chrisi Webster\";\n  });\n  return (\n    <div className={className}>\n      <h2>PlaylistView</h2>\n      <Button name=\"View playlists\" onClick={() => viewPlaylists()} />\n    </div>\n  );\n};\n\nexport default PlaylistView;\n","import React from \"react\";\n\n//Components\nimport Button from \"../Button\";\n\n//CSS\nimport \"./styles.css\";\n\nconst Track = ({ track, remove, addTrack, removeTrack }) => {\n  const renderButton = () => {\n    if (remove) {\n      return (\n        <Button type=\"submit\" name=\"-\" onClick={() => removeTrack(track)} />\n      );\n    } else {\n      return <Button type=\"submit\" name=\"+\" onClick={() => addTrack(track)} />;\n    }\n  };\n  return (\n    <div className=\"tracks\">\n      <div className=\"flex-wrapper\">\n        <h3>{track.name}</h3> {renderButton()}\n      </div>\n      <p>\n        {track.artist} | {track.album}\n      </p>\n    </div>\n  );\n};\n\nexport default Track;\n","import React from \"react\";\n\n//Components\nimport Track from \"../Track\";\n\nconst TrackList = ({ tracks, addTrack, removeTrack, remove }) => {\n  return (\n    <div className=\"track-list\">\n      {tracks.map((track) => {\n        return (\n          <Track\n            track={track}\n            key={track.id}\n            addTrack={addTrack}\n            removeTrack={removeTrack}\n            remove={remove}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TrackList;\n","import React from \"react\";\n\n//Components\nimport TrackList from \"../TrackList\";\n\nconst SearchResults = ({ searchTracks, addTrack, message }) => {\n  return (\n    <div className=\"flex-wrapper\">\n      <div className=\"tracks-wrapper\">\n        {searchTracks === [] && { message }}\n        <TrackList tracks={searchTracks} addTrack={addTrack} remove={false} />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import React from \"react\";\n\nconst Input = ({ type, label, placeholder, onChange, onBlur, id, value }) => {\n  return (\n    <div>\n      <label htmlFor={id}>{label}</label>\n      <input\n        id={id}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n        onBlur={onBlur}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\n//Components\nimport Button from \"../Button\";\nimport Input from \"../Input\";\n\n//CSS\nimport \"./styles.css\";\n\nconst Search = ({\n  handleAPISearch,\n  accessToken,\n  expiresIn,\n  handleSignIn,\n  searchInput,\n  handleSearchInput,\n  handleClearSearchInput,\n}) => {\n  return (\n    <div className=\"search-buttons\">\n      {!accessToken && (\n        <Button\n          type=\"button\"\n          name=\"Sign in\"\n          id=\"sign\"\n          onClick={() => handleSignIn()}\n        />\n      )}\n      {expiresIn !== 0 && (\n        <form id=\"search\" onSubmit={(e) => handleAPISearch(e)}>\n          <Input\n            type=\"text\"\n            value={searchInput}\n            id=\"search\"\n            placeholder=\"Search for songs\"\n            onChange={(e) => handleSearchInput(e)}\n            onBlur={() => handleClearSearchInput()}\n          />\n          <Button type=\"submit\" name=\"Search\" />\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\n//Components\nimport Button from \"../Button\";\nimport Input from \"../Input\";\nimport TrackList from \"../TrackList\";\n\nconst Playlist = ({\n  updatePlaylistName,\n  playlistTracks,\n  savePlaylist,\n  removeTrack,\n  playlistName,\n  setPlaylistTracks,\n  setPlaylistName,\n  handleClearNameInput,\n  playlistInput,\n}) => {\n  //Creating a separate function so I can handle changing the state\n  const handleSavePlaylist = (e) => {\n    e.preventDefault();\n    const trackURIs = playlistTracks.map((track) => track.uri);\n    savePlaylist(playlistName, trackURIs);\n    setPlaylistName(\"New Playlist\");\n    setPlaylistTracks([]);\n  };\n\n  return (\n    <form id=\"playlist-form\" onSubmit={(e) => handleSavePlaylist(e)}>\n      <Input\n        type=\"text\"\n        id=\"playlist\"\n        value={playlistInput}\n        onChange={(e) => updatePlaylistName(e)}\n        onBlur={() => handleClearNameInput()}\n      />\n\n      <TrackList\n        tracks={playlistTracks}\n        removeTrack={removeTrack}\n        remove={true}\n      />\n\n      <Button type=\"submit\" name=\"Save to Spotify\" id=\"save-spotify\" />\n    </form>\n  );\n};\n\nexport default Playlist;\n","import React, { useState } from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\n//Components\nimport Header from \"../Header\";\nimport NavBar from \"../NavBar\";\nimport Home from \"../Home\";\nimport PlaylistView from \"../PlaylistView\";\nimport SearchWrapper from \"../SearchWrapper\";\n\n//CSS\nimport \"./App.css\";\n\n//App component\nconst App = () => {\n  const [status, setStatus] = useState(false);\n\n  const handleNavClick = () => {\n    status === true ? setStatus(false) : setStatus(true);\n  };\n\n  return (\n    <div>\n      <Header title=\"Playlist Maker\">\n        <NavBar handleNavClick={handleNavClick} status={status} />\n      </Header>\n      <HashRouter basename={\"/\"}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/search\" component={SearchWrapper} />\n          <Route exact path=\"/view-playlists\" component={PlaylistView} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}